#labels Featured
This is longer version of project description which described what this project is about and what is the ultimate outcome of this project.

= Introduction =

As mentioned in the project summary page, this project intend to port gaevfs to java.io API to enable java.io classes support in Google App Engine (GAE). The scope of java.io classes porting is the classes to be ported must be listed under white list of [http://code.google.com/appengine/docs/java/jrewhitelist.html The JRE Class White List] of Google App Engine.

= Feasibility =
It is possible to extend java.io classes with Groovy Meta Programming capability. [http://groovy.codehaus.org/groovy-jdk/ Groovy JDK (GDK)] is good show case for feasibility of this project. 

= Motivation =
The project kick off with following motivations:
  * Google App Engine Java project able to perform file operation using java.io classes in Virtual File System (VFS) like Google App Engine support file operation natively.
  * Java developer need not to learn new [http://code.google.com/p/gaevfs/ GAEVFS]/[http://commons.apache.org/vfs/ Apache Commons VFS] API, instead using the familiar Java IO API for file operation in Google App Engine.
  * All applications and java library built on top of Java IO API can run in Google App Engine without any code changes, eg: [http://www.grails.org/plugin/super-file-upload super file upload grails plugin]

= Road Map =
==Version 0.1.0:==
Able to run super file upload grails plugin in Google App Engine without code modification of the plugin.

==Version 0.5.0:==
Support all common (frequently used) Java IO classes which mentioned in Thinking in Java 4th Edition. Please refer to JavaIOSupportedClasses for more information.

==Version 1.0.0:==
Support all Java IO classes listed in  [http://code.google.com/appengine/docs/java/jrewhitelist.html The JRE Class White List] of Google App Engine.

= References =
<p>1) Extend the JDK Classes with Jakarta Commons, Part III - VFS
<br />http://www.devx.com/Java/Article/30117/0/page/2</p> 
<p>2) Writing code that runs unmodified in either GAE or non-GAE environments. 
<br /> http://code.google.com/p/gaevfs/wiki/ApplicationPortability</p> 